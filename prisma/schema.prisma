// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id       Int     @id @default(autoincrement())
  username String  @db.VarChar(100)
  email    String  @unique @db.VarChar(150)
  password String  @db.VarChar(100)
  isAdmin  Boolean @default(false)
  token    String? @db.VarChar(100)

  reviewed  Review[]
  attended  Event_attended[]
}

model Event {
  id          Int      @id @default(autoincrement())
  title       String   @db.VarChar(100)
  description String   @db.Text
  location    String   @db.VarChar(255)
  date        DateTime @db.Timestamp()
  poster      String   @db.VarChar(255)
  category_id Int

  category      Category  @relation(fields: [category_id], references: [id])
  reviews       Review[]
  attendees     Event_attended[]
  announcements Announcement[]
}

model Event_attended {
  id          Int   @id @default(autoincrement())
  date_signed DateTime @db.Timestamp

  user_id     Int
  event_id    Int
  user        User  @relation(fields: [user_id], references: [id])
  event       Event @relation(fields: [event_id], references: [id])
}

model Announcement {
  id      Int @id @default(autoincrement())
  content String @db.Text
  date    DateTime @db.Timestamp()

  event_id Int
  event    Event @relation(fields: [event_id], references: [id])
}

model Category {
  id Int @id @default(autoincrement())
  name String @db.VarChar(100)
  events Event[]
}

model Review {
  id       Int   @id @default(autoincrement())
  user_id  Int
  event_id Int
  rating   Int    @db.Integer
  comment  String @db.Text
  user     User  @relation(fields: [user_id], references: [id])
  event    Event @relation(fields: [event_id], references: [id])
}
